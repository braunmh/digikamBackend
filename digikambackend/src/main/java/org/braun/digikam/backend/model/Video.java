/*
 * Digikam
 * RESTful Backend for Digikam
 *
 * The version of the OpenAPI document: 1.0
 * Contact: braun.h.michael@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.braun.digikam.backend.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.braun.digikam.backend.model.Keyword;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * Video
 */
@JsonPropertyOrder({
  Video.JSON_PROPERTY_CREATOR,
  Video.JSON_PROPERTY_ORIENTATION,
  Video.JSON_PROPERTY_LATITUDE,
  Video.JSON_PROPERTY_CREATION_DATE,
  Video.JSON_PROPERTY_WIDTH,
  Video.JSON_PROPERTY_ID,
  Video.JSON_PROPERTY_HEIGHT,
  Video.JSON_PROPERTY_LONGITUDE,
  Video.JSON_PROPERTY_RATING,
  Video.JSON_PROPERTY_KEYWORDS,
  Video.JSON_PROPERTY_TITLE,
  Video.JSON_PROPERTY_DESCRIPTION,
  Video.JSON_PROPERTY_DURATION,
  Video.JSON_PROPERTY_RELATIVE_PATH,
  Video.JSON_PROPERTY_ROOT,
  Video.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-03-20T12:51:17.342362153+01:00[Europe/Berlin]")
public class Video   {
  public static final String JSON_PROPERTY_CREATOR = "creator";
  @JsonProperty(JSON_PROPERTY_CREATOR)
  private String creator;

  /**
   * Gets or Sets orientation
   */
  public enum OrientationEnum {
    PORTRAIT("portrait"),
    
    LANDSCAPE("landscape");

    private String value;

    OrientationEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrientationEnum fromValue(String value) {
      for (OrientationEnum b : OrientationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORIENTATION = "orientation";
  @JsonProperty(JSON_PROPERTY_ORIENTATION)
  private OrientationEnum orientation;

  public static final String JSON_PROPERTY_LATITUDE = "latitude";
  @JsonProperty(JSON_PROPERTY_LATITUDE)
  private Double latitude;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  private LocalDateTime creationDate;

  public static final String JSON_PROPERTY_WIDTH = "width";
  @JsonProperty(JSON_PROPERTY_WIDTH)
  private Integer width;

  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private Integer id;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  private Integer height;

  public static final String JSON_PROPERTY_LONGITUDE = "longitude";
  @JsonProperty(JSON_PROPERTY_LONGITUDE)
  private Double longitude;

  public static final String JSON_PROPERTY_RATING = "rating";
  @JsonProperty(JSON_PROPERTY_RATING)
  private Integer rating;

  public static final String JSON_PROPERTY_KEYWORDS = "keywords";
  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  private List<@Valid Keyword> keywords;

  public static final String JSON_PROPERTY_TITLE = "title";
  @JsonProperty(JSON_PROPERTY_TITLE)
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_DURATION = "duration";
  @JsonProperty(JSON_PROPERTY_DURATION)
  private Integer duration;

  public static final String JSON_PROPERTY_RELATIVE_PATH = "relativePath";
  @JsonProperty(JSON_PROPERTY_RELATIVE_PATH)
  private String relativePath;

  public static final String JSON_PROPERTY_ROOT = "root";
  @JsonProperty(JSON_PROPERTY_ROOT)
  private String root;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public Video creator(String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Name of the person, who has taken the picture
   * @return creator
   **/
  @JsonProperty(value = "creator")
  @ApiModelProperty(value = "Name of the person, who has taken the picture")
  
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public Video orientation(OrientationEnum orientation) {
    this.orientation = orientation;
    return this;
  }

  /**
   * Get orientation
   * @return orientation
   **/
  @JsonProperty(value = "orientation")
  @ApiModelProperty(value = "")
  
  public OrientationEnum getOrientation() {
    return orientation;
  }

  public void setOrientation(OrientationEnum orientation) {
    this.orientation = orientation;
  }

  public Video latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   **/
  @JsonProperty(value = "latitude")
  @ApiModelProperty(value = "")
  
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public Video creationDate(LocalDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   **/
  @JsonProperty(value = "creationDate")
  @ApiModelProperty(value = "")
  
  public LocalDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(LocalDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public Video width(Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   **/
  @JsonProperty(value = "width")
  @ApiModelProperty(value = "")
  
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public Video id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * unique Id identifying an Image
   * @return id
   **/
  @JsonProperty(value = "id")
  @ApiModelProperty(value = "unique Id identifying an Image")
  
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Video height(Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   **/
  @JsonProperty(value = "height")
  @ApiModelProperty(value = "")
  
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public Video longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   **/
  @JsonProperty(value = "longitude")
  @ApiModelProperty(value = "")
  
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public Video rating(Integer rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   **/
  @JsonProperty(value = "rating")
  @ApiModelProperty(value = "")
  
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public Video keywords(List<@Valid Keyword> keywords) {
    this.keywords = keywords;
    return this;
  }

  public Video addKeywordsItem(Keyword keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   **/
  @JsonProperty(value = "keywords")
  @ApiModelProperty(value = "")
  @Valid 
  public List<@Valid Keyword> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<@Valid Keyword> keywords) {
    this.keywords = keywords;
  }

  public Video title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   **/
  @JsonProperty(value = "title")
  @ApiModelProperty(value = "")
  
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Video description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty(value = "description")
  @ApiModelProperty(value = "")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Video duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   **/
  @JsonProperty(value = "duration")
  @ApiModelProperty(value = "")
  
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public Video relativePath(String relativePath) {
    this.relativePath = relativePath;
    return this;
  }

  /**
   * Get relativePath
   * @return relativePath
   **/
  @JsonProperty(value = "relativePath")
  @ApiModelProperty(value = "")
  
  public String getRelativePath() {
    return relativePath;
  }

  public void setRelativePath(String relativePath) {
    this.relativePath = relativePath;
  }

  public Video root(String root) {
    this.root = root;
    return this;
  }

  /**
   * Get root
   * @return root
   **/
  @JsonProperty(value = "root")
  @ApiModelProperty(value = "")
  
  public String getRoot() {
    return root;
  }

  public void setRoot(String root) {
    this.root = root;
  }

  public Video name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty(value = "name")
  @ApiModelProperty(value = "")
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Video video = (Video) o;
    return Objects.equals(this.creator, video.creator) &&
        Objects.equals(this.orientation, video.orientation) &&
        Objects.equals(this.latitude, video.latitude) &&
        Objects.equals(this.creationDate, video.creationDate) &&
        Objects.equals(this.width, video.width) &&
        Objects.equals(this.id, video.id) &&
        Objects.equals(this.height, video.height) &&
        Objects.equals(this.longitude, video.longitude) &&
        Objects.equals(this.rating, video.rating) &&
        Objects.equals(this.keywords, video.keywords) &&
        Objects.equals(this.title, video.title) &&
        Objects.equals(this.description, video.description) &&
        Objects.equals(this.duration, video.duration) &&
        Objects.equals(this.relativePath, video.relativePath) &&
        Objects.equals(this.root, video.root) &&
        Objects.equals(this.name, video.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creator, orientation, latitude, creationDate, width, id, height, longitude, rating, keywords, title, description, duration, relativePath, root, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Video {\n");
    
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    orientation: ").append(toIndentedString(orientation)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    relativePath: ").append(toIndentedString(relativePath)).append("\n");
    sb.append("    root: ").append(toIndentedString(root)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

