/*
 * Digikam
 * RESTful Backend for Digikam
 *
 * The version of the OpenAPI document: 1.0
 * Contact: braun.h.michael@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.braun.digikam.backend.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ImageUpdate
 */
@JsonPropertyOrder({
  ImageUpdate.JSON_PROPERTY_IMAGE_ID,
  ImageUpdate.JSON_PROPERTY_RATING,
  ImageUpdate.JSON_PROPERTY_TITLE,
  ImageUpdate.JSON_PROPERTY_DESCRIPTION,
  ImageUpdate.JSON_PROPERTY_CREATOR,
  ImageUpdate.JSON_PROPERTY_KEYWORDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-03-20T12:51:17.342362153+01:00[Europe/Berlin]")
public class ImageUpdate   {
  public static final String JSON_PROPERTY_IMAGE_ID = "imageId";
  @JsonProperty(JSON_PROPERTY_IMAGE_ID)
  private Integer imageId;

  public static final String JSON_PROPERTY_RATING = "rating";
  @JsonProperty(JSON_PROPERTY_RATING)
  private Integer rating;

  public static final String JSON_PROPERTY_TITLE = "title";
  @JsonProperty(JSON_PROPERTY_TITLE)
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  @JsonProperty(JSON_PROPERTY_CREATOR)
  private String creator;

  public static final String JSON_PROPERTY_KEYWORDS = "keywords";
  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  private List<Long> keywords;

  public ImageUpdate imageId(Integer imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * Get imageId
   * @return imageId
   **/
  @JsonProperty(value = "imageId")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Integer getImageId() {
    return imageId;
  }

  public void setImageId(Integer imageId) {
    this.imageId = imageId;
  }

  public ImageUpdate rating(Integer rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   **/
  @JsonProperty(value = "rating")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public ImageUpdate title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   **/
  @JsonProperty(value = "title")
  @ApiModelProperty(value = "")
  
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ImageUpdate description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty(value = "description")
  @ApiModelProperty(value = "")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ImageUpdate creator(String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   **/
  @JsonProperty(value = "creator")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public ImageUpdate keywords(List<Long> keywords) {
    this.keywords = keywords;
    return this;
  }

  public ImageUpdate addKeywordsItem(Long keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   **/
  @JsonProperty(value = "keywords")
  @ApiModelProperty(value = "")
  
  public List<Long> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<Long> keywords) {
    this.keywords = keywords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageUpdate imageUpdate = (ImageUpdate) o;
    return Objects.equals(this.imageId, imageUpdate.imageId) &&
        Objects.equals(this.rating, imageUpdate.rating) &&
        Objects.equals(this.title, imageUpdate.title) &&
        Objects.equals(this.description, imageUpdate.description) &&
        Objects.equals(this.creator, imageUpdate.creator) &&
        Objects.equals(this.keywords, imageUpdate.keywords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageId, rating, title, description, creator, keywords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageUpdate {\n");
    
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

